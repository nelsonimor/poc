<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<!-- <version>2.3.4.RELEASE</version> -->
		<version>2.2.2.RELEASE</version>
		<!-- <version>2.1.9.RELEASE</version> -->
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>poc</artifactId>

	<!-- 
	0.0.1 : add mysql storage and addPerson operation 
	0.0.2 : add mysql storage and addPerson operation 
	0.0.3 : add unicity control / add update/deletePerson / addFileUpload 
	0.0.4 : add logger and spring profile 
	0.0.5 : configure logs for prod 
	0.0.6 : deploy configuration and add CRUD for continent 
	0.0.7 : deploy with country 
	0.0.8 : add city management 
	0.0.9 : add person management 
	0.0.10 : add optional and stream test + regex on city and country
	0.0.11 : fix regex
	-->

	<version>0.0.11</version>
	<name>poc</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>


	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<!--<version>2.8.0</version> -->
			<version>3.0.0</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<!--<version>2.8.0</version> -->
			<version>3.0.0</version>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-spring-web</artifactId>
			<!--<version>2.8.0</version> -->
			<version>3.0.0</version>
		</dependency>


		<dependency>
			<groupId>com.example.client</groupId>
			<artifactId>poc-client</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>fr.bball.geocoding</groupId>
			<artifactId>Basketball-Geocoding-OpenStreetMap</artifactId>
			<version>0.0.1</version>
		</dependency>

	</dependencies>


	<build>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<profiles>
						<profile>dev</profile>
						<profile>prod</profile>
					</profiles>
					<executable>true</executable>
					<jvmArguments>-Dfile.encoding=UTF8</jvmArguments>
				</configuration>
			</plugin>

			<!--  <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>-Dfile.encoding=UTF-8</argLine>
				</configuration>
			</plugin>-->

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.2</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<!-- attached to Maven test phase -->
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>

		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-webdav-jackrabbit</artifactId>
				<version>1.0-beta-7</version>
			</extension>
		</extensions>
	</build>

	<profiles>
		<profile>
			<id>maven-dev</id>
			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>maven-prod</id>
			<dependencies>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
					<scope>runtime</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

	<distributionManagement>
		<repository>
			<id>myserver2</id>
			<name>Name of the Maven repository</name>
			<url>dav:http://webdav-taddeushero.alwaysdata.net</url>
			<uniqueVersion>false</uniqueVersion>
		</repository>
	</distributionManagement>



</project>
